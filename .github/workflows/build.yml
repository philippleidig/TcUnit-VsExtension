name: "Build"

permissions: 
  contents: write

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
      
jobs:
  build:
    outputs:
      version: ${{ steps.vsix_version_15.outputs.version-number }}
    name: Build 
    runs-on: windows-latest
    env:
      Configuration: Release
      Vsix15ManifestPath: src\TcUnit.Vsix.15\source.extension.vsixmanifest
      Vsix15ManifestSourcePath: src\TcUnit.Vsix.15\source.extension.cs
      Vsix17ManifestPath: src\TcUnit.Vsix.17\source.extension.vsixmanifest
      Vsix17ManifestSourcePath: src\TcUnit.Vsix.17\source.extension.cs
      
    steps:
    - uses: actions/checkout@v3
  
    - name: Setup .NET build dependencies
      uses: timheuer/bootstrap-dotnet@v2
      with:
        nuget: 'false'
        sdk: 'false'
        msbuild: 'true'

    - name: Format *.cs files
      run: |
          dotnet tool restore
          dotnet csharpier .

    - name: Increment VSIX version 15
      id: vsix_version_15
      uses: timheuer/vsix-version-stamp@v2
      with:
        manifest-file: ${{ env.Vsix15ManifestPath }}
        vsix-token-source-file: ${{ env.Vsix15ManifestSourcePath }}

    - name: Increment VSIX version 17
      id: vsix_version_17
      uses: timheuer/vsix-version-stamp@v2
      with:
        manifest-file: ${{ env.Vsix17ManifestPath }}
        vsix-token-source-file: ${{ env.Vsix17ManifestSourcePath }}

    - name: Build
      run: msbuild /v:m -restore /p:OutDir=bin\Release /p:Configuration=Release /p:DeployExtension=false /p:ZipPackageCompressionLevel=normal
      
    - name: Install inno setup package via chocolatey
      run: choco install innosetup

    - name: Build setup
      run: iscc.exe setup\TcUnit.iss

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: TcUnit_${{ steps.vsix_version_15.outputs.version-number }}.exe
        path: dist/*.exe

  publish:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    needs: build
    name: Publish 
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download Package artifact
        uses: actions/download-artifact@v4 
        with:
          name: TcUnit_${{ needs.build.outputs.version }}.exe

      - name: Tag and Release
        if: ${{ github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[release]') }}
        id: tag_release
        uses: softprops/action-gh-release@v2
        with:
          body: Release ${{ needs.build.outputs.version }}
          tag_name: ${{ needs.build.outputs.version }}
          generate_release_notes: true
          files: |
            **/*.exe

